<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BanqueDataSet" targetNamespace="http://tempuri.org/BanqueDataSet.xsd" xmlns:mstns="http://tempuri.org/BanqueDataSet.xsd" xmlns="http://tempuri.org/BanqueDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ExpFinanceConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ExpFinanceConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ExpFinance.Properties.Settings.GlobalReference.Default.ExpFinanceConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BANQUETableAdapter" GeneratorDataComponentClassName="BANQUETableAdapter" Name="BANQUE" UserDataComponentName="BANQUETableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ExpFinanceConnectionString (Settings)" DbObjectName="DEPENSE_CLIENT.dbo.BANQUE" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Banque] WHERE (([codeBank] = @Original_codeBank) AND ((@IsNull_nomBank = 1 AND [nomBank] IS NULL) OR ([nomBank] = @Original_nomBank)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_codeBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="codeBank" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nomBank" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nomBank" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nomBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nomBank" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Banque] ([codeBank], [nomBank]) VALUES (@codeBank, @nomBank);
SELECT codeBank, nomBank FROM Banque WHERE (codeBank = @codeBank)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@codeBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="codeBank" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nomBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nomBank" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        CODE_BANQUE, NOM_BANQUE
FROM            BANQUE
WHERE        (ENTITE = @entite)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="entite" ColumnName="ENTITE" DataSourceName="DEPENSE_CLIENT.dbo.BANQUE" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@entite" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ENTITE" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Banque] SET [codeBank] = @codeBank, [nomBank] = @nomBank WHERE (([codeBank] = @Original_codeBank) AND ((@IsNull_nomBank = 1 AND [nomBank] IS NULL) OR ([nomBank] = @Original_nomBank)));
SELECT codeBank, nomBank FROM Banque WHERE (codeBank = @codeBank)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@codeBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="codeBank" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nomBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nomBank" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_codeBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="codeBank" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nomBank" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nomBank" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nomBank" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nomBank" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CODE_BANQUE" DataSetColumn="CODE_BANQUE" />
              <Mapping SourceColumn="NOM_BANQUE" DataSetColumn="NOM_BANQUE" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BanqueDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BanqueDataSet" msprop:Generator_UserDSName="BanqueDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BANQUE" msprop:Generator_TableClassName="BANQUEDataTable" msprop:Generator_TableVarName="tableBANQUE" msprop:Generator_RowChangedName="BANQUERowChanged" msprop:Generator_TablePropName="BANQUE" msprop:Generator_RowDeletingName="BANQUERowDeleting" msprop:Generator_RowChangingName="BANQUERowChanging" msprop:Generator_RowEvHandlerName="BANQUERowChangeEventHandler" msprop:Generator_RowDeletedName="BANQUERowDeleted" msprop:Generator_RowClassName="BANQUERow" msprop:Generator_UserTableName="BANQUE" msprop:Generator_RowEvArgName="BANQUERowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CODE_BANQUE" msprop:Generator_ColumnVarNameInTable="columnCODE_BANQUE" msprop:Generator_ColumnPropNameInRow="CODE_BANQUE" msprop:Generator_ColumnPropNameInTable="CODE_BANQUEColumn" msprop:Generator_UserColumnName="CODE_BANQUE" type="xs:int" />
              <xs:element name="NOM_BANQUE" msprop:Generator_ColumnVarNameInTable="columnNOM_BANQUE" msprop:Generator_ColumnPropNameInRow="NOM_BANQUE" msprop:Generator_ColumnPropNameInTable="NOM_BANQUEColumn" msprop:Generator_UserColumnName="NOM_BANQUE" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="125" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BANQUE" />
      <xs:field xpath="mstns:CODE_BANQUE" />
    </xs:unique>
  </xs:element>
</xs:schema>